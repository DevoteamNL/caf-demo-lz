name: 'Connectivity Landing Zone'
on:
  push:    
    branches: ['main']      
  pull_request:

permissions:
  contents: read

jobs:
  terraform-plan:
    name: 'Terraform - Connectivity Landing Zone'
    runs-on: ubuntu-latest
    environment: non production
    env:
      AZURERM_CLIENT_ID: ${{ secrets.AZURE_AD_LAUNCHER_CLIENT_ID }}
      AZURERM_CLIENT_SECRET: ${{ secrets.AZURE_AD_LAUNCHER_CLIENT_SECRET }}
      SUBSCRIPTION_ID: ${{ secrets.AZURE_LAUNCHER_SUBSCRIPTION_ID }}
      TENANT_ID: ${{ secrets.AZURE_AD_LAUNCHER_TENANT_ID }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: './src/devoteam-modules/dvt-caf-landingzones'
  

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -no-color -var-file "./src/landingzones/global-settings.tfvars" -var-file "./src/landingzones/core/connectivity/landingzone.tfvars" 
      working-directory: './src/devoteam-modules/dvt-caf-landingzones'

      
